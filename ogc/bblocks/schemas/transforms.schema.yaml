$defs:
  transform:
    description: An individual trasform
    type: object
    required:
      - id
      - type
    oneOf:
      - required:
          - code
      - required:
          - ref
    properties:
      id:
        description: |
          An identifier for this transform, using only alphanumeric characters and dashes (-).
        type: string
        pattern: '^[a-zA-Z][a-zA-Z0-9-]*$'
      description:
        description: Textual description for this transform. Markdown is accepted.
        type: string
      type:
        description: Type of transform
        $ref: '#/$defs/transformType'
      inputs:
        description: Inputs supported by this transform
        type: object
        properties:
          mediaTypes:
            description: List of input media types supported by this transform
            $ref: '#/$defs/nonEmptyMediaTypeList'
      outputs:
        description: Outputs generated by this transform
        type: object
        properties:
          mediaTypes:
            description: List of output media types generated by this transform
            $ref: '#/$defs/nonEmptyMediaTypeList'
          profiles:
            description: |
              List of profiles that the outputs of this transform will comply with (union). bblocks:// URIs
              can be used here.
            $ref: '#/$defs/nonEmptyStringList'
      code:
        description: Code or content for the transform
        $ref: '#/$defs/nonEmptyString'
      ref:
        description: Reference to the code or content for the transform
        $ref: '#/$defs/nonEmptyString'
      metadata:
        description: |
          Additional metadata to pass to the transform. Must be an object, the values of which can be anything.
        type: object

  transformList:
    description: List of transforms for the Building Block
    type: array
    items:
      $ref: '#/$defs/transform'

  transformType:
    description: Type of transform
    anyOf:
      - description: Supported by default
        enum:
          - shacl-af-rule
          - sparql-construct
          - sparql-update
          - json-ld-frame
          - jq
          - semantic-uplift
          - xslt
      - description: Other identifiers are also accepted
        $ref: '#/$defs/nonEmptyString'

  mediaType:
    oneOf:
      - $ref: '#/$defs/mimeTypeString'
      - type: object
        required:
          - mimeType
          - defaultExtension
        properties:
          mimeType:
            description: A concrete media type (e.g. application/xml)
            $ref: '#/$defs/mimeTypeString'
          defaultExtension:
            description: Default file name extension
            $ref: '#/$defs/nonEmptyString'

  mimeTypeString:
    description: A concrete media type (e.g. application/xml)
    type: string
    pattern: '[^/]+/[^/]+'

  nonEmptyMediaTypeList:
    description: A list of concrete media types
    allOf:
      - $ref: '#/$defs/nonEmptyStringList'
      - items:
          $ref: '#/$defs/mediaType'

  nonEmptyString:
    description: A string that is not empty (has some content apart from whitespace)
    type: string
    pattern: '[^\s]+'

  nonEmptyStringList:
    description: A non-empty array of non-empty string items
    type: array
    minItems: 1
    items:
      $ref: '#/$defs/nonEmptyString'

type: object
properties:
  transforms:
    $ref: '#/$defs/transformList'
